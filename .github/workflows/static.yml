# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Replace environment variables
        env:
          IMAGE_BASE_URL: ${{ secrets.IMAGE_BASE_URL }}
        run: |
          # Replace the placeholder with the actual secret value
          sed -i "s|{{IMAGE_BASE_URL}}|$IMAGE_BASE_URL|g" items.html
          
          # Verify the replacement was successful
          echo "‚úÖ Configuration updated successfully"
          echo "üîí IMAGE_BASE_URL has been configured from secrets"
          
          # Show confirmation without revealing the actual URL
          if grep -q "$IMAGE_BASE_URL" items.html; then
            echo "‚úÖ Secret IMAGE_BASE_URL successfully injected into items.html"
          else
            echo "‚ùå Failed to inject IMAGE_BASE_URL"
            exit 1
          fi
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Deployment Summary
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üìç Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "üîí Image URLs are securely configured from secrets"
          echo "‚ú® Free Fire Arsenal database is live!"
